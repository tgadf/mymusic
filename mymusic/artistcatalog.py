""" Command line code to scan my artist music collection """__all__ = ["MyMusicArtistCatalog"]from myutils import DirInfo, Timestatfrom os import walkfrom .params import MyMusicParams################################################################################ My Artist Album Type###############################################################################class MyMusicArtistCatalog:    def __repr__(self):        return f"MyMusicArtistCatalog({self.artistDir})"    def __init__(self, artistDir: DirInfo, **kwargs):        self.params = MyMusicParams(**kwargs)        self.verbose = kwargs.get('verbose', False)                assert isinstance(artistDir, DirInfo), f"ArtistDir [{artistDir}] is not a DirInfo"        self.artistDir = artistDir        self.artistName = artistDir.basename                if self.verbose is True:            print(self.__repr__())        ###########################################################################    # I/O    ###########################################################################    def getContents(self):        return self.contents        ###########################################################################    # Find Artist Directory Content    ###########################################################################    def find(self, **kwargs):        def getRelDir(dirVal: str) -> 'str':            assert isinstance(dirVal, str), f"dirVal [{dirVal}] is not a str"            retval = dirVal.replace(self.artistDir.str, "")            retval = retval[1:] if retval.startswith("/") else retval            return retval                ts = Timestat("Finding Artist [{self.artistName}] Contents", verbose=self.verbose, ind=2)        assert self.artistDir.exists(), f"ArtistDir [{self.artistDir}] is not available"                contents = {}        for root, dirs, files in walk(self.artistDir.path, topdown=True):            relDir = getRelDir(root)            if len(relDir) == 0:                continue            contents[relDir] = files                    self.contents = contents        ts.stop()