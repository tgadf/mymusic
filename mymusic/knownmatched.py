""" Command line code to see what I matched music I have """__all__ = ["knownmatched"]from myutils import headerimport argparseimport subprocessfrom .primedir import getPrimeDirfrom .params import MyMusicParams################################################################################ Master function to be called on the command line###############################################################################def knownmatched():    args = getArgs()    params = MyMusicParams()    matchedPath = params.getMatchedDir()    primeDir = getPrimeDir(args.artist)    artistDir = matchedPath.joinDir(primeDir).joinDir(args.artist)    header(args.artist)    if artistDir.exists():        subprocess.call(["du", "-h", "-d", "1", artistDir.str])    else:        print(f"There is no data for [{args.artist}]")################################################################################ Argument Parser###############################################################################def getArgs():    parser = argparse.ArgumentParser(description='Music ID Tagger')    parser.add_argument('-artist', '-art', "-a", action="store", dest="artist")    parser.add_argument('-debug', action="store_true", default=False)    args = parser.parse_args()    if args.debug is True:        argVars = vars(args)        keyLen = max([len(key) for key in argVars.keys()])        print("knownmatched Arguments")        for key, val in argVars.items():            if key in ["show", "debug"]:                continue            print(f"  {key: <{keyLen+1}}: {val}")        print("")    return args