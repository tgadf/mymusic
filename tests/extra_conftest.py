@pytest.fixture(scope="session", autouse=True)def dbmod():    mods = {}    for db in MasterDBs().getDBs():        if True:            if db not in ["AlbumOfTheYear", "AllMusic", "AppleMusic", "Bandcamp",                          "Beatport", "Deezer", "Discogs", "Genius", "JioSaavn",                          "LastFM", "MetalArchives", "MusicBrainz"]:                continue        else:            if db not in ["Discogs"]:                continue                    modpath = f"musicdb.{db.lower()}"        try:            impmod = import_module(modpath)        except Exception as error:            warnings.warn(f"Could not import {modpath}: {error}")        mods[db] = impmod        print(f"Loaded {modpath}")    return mods@pytest.fixture(scope="session", autouse=True)def dbattr(dbmod):    def _getattr(attr):        retval = {db: getattr(impmod, attr) for db, impmod in dbmod.items()}        return retval    return _getattr